$break-small: 900px;
$break-middle: 1200px;
$break-large: 1400px;

@mixin border-box(){
	box-sizing:border-box;
	-webkit-box-sizing:border-box;
}

@mixin prefix-css3($prop,$value){
	#{$prop} :$value;
	-webkit-#{$prop} :$value;
	-moz-#{$prop}:$value;
	-o-#{$prop} :$value;
	-ms-#{$prop} :$value;
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin opacity($val){
	opacity : $val;
	filter : alpha(opacity=$val * 100);
	-ms-filter : alpha(opacity=$val * 100);
}
@mixin animation ($delay, $duration, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
    -webkit-animation-iteration-count:infinite;

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
    -moz-animation-iteration-count:infinite;

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
    -o-animation-iteration-count:infinite;

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
    animation-iteration-count:infinite;
}

@mixin keyframe ($animation_name) {
    @-webkit-keyframes #{$animation_name} {
        @content;
    }

    @-moz-keyframes #{$animation_name} {
        @content;
    }

    @-o-keyframes #{$animation_name} {
        @content;
    }

    @keyframes #{$animation_name} {
        @content;
    }
}

// 변수
$ctct: translate(-50%,-50%); 
$ctX: translateX(-50%);
$ctY: translateY(-50%);
$noto: 'NotoSansKR';
// 앱솔루트 포지셔닝.
@mixin center ( $top, $bottom, $left, $transform ) {
	position: absolute;
	top: $top;
	bottom: $bottom;
	left: $left;
	transform: $transform;
}
// $val의 값이 auto면 퍼센티지,
// $val에 높이값이 있으면 가운데 정렬.
// 클래스명 figure 포함 엘리먼트 적용.
@mixin auto($val) {
	height: $val;
	@if ( $val == auto ) {
		div[class*=figure]{
			img, video{
				width: 100%;
			}
		}
	} @else {
		div[class*=figure]{
			@include center(0, auto, 50%, $ctX);
		}
	}
}
@mixin after() {
	&::after{
		display: block;
		content: '';
		clear: both;
	}
}
@mixin w1190() {
	width: 1190px;
	margin: 0 auto;
}